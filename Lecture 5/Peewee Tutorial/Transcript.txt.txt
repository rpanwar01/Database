Python 3.4.0 (v3.4.0:04f714765c13, Mar 16 2014, 19:24:06) [MSC v.1600 32 bit (In
tel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> from peewee import *
>>> db = SqliteDatabase('people.db')
>>> class Person(Model):
...     name = CharField()
...     birthday = DateField()
...     is_relative = BooleanField()
...
>>> class Meta:
...     database = db
...
>>> class Pet(Model):
...     owner = ForeignKeyField(Person, related_name='pets')
...     name = CharField()
...     animal_type = CharField()
...     class Meta:
...             database = db
...
>>> db.connect()
>>> db.create_tables([Person, Pet])
>>> from datetime import date
>>> uncle_bob = Person(name='Bob', birthday=date(1960, 1, 15), is_relative=True)

>>> uncle_bob.save() # bob is now stored in the database
1
>>> grandma = Person.create(name='Grandma', birthday=date(1935, 3, 1), is_relati
ve=True)
>>> herb = Person.create(name='Herb', birthday=date(1950, 5, 5), is_relative=Fal
se)
>>> grandma.name = 'Grandma L.'
>>> grandma.save()
1
>>> bob_kitty = Pet.create(owner=uncle_bob, name='Kitty', animal_type='cat')
>>> herb_fido = Pet.create(owner=herb, name='Fido', animal_type='dog')
>>> herb_mittens = Pet.create(owner=herb, name='Mittens', animal_type='cat')
>>> herb_mittens_jr = Pet.create(owner=herb, name='Mittens Jr', animal_type='cat
')
>>> herb_mittens.delete_instance()
1
>>> herb_fido.owner = uncle_bob
>>> herb_fido.save()
1
>>> bob_fido = herb_fido
>>>
>>> grandma = Person.select().where(Person.name == 'Grandma L.').get()
>>> grandma = Person.get(Person.name == 'Grandma L.')
>>> for person in Person.select():
...      print (person.name, person.is_relative)
...
Bob True
Grandma L. True
Herb False
>>> query = Pet.select().where(Pet.animal_type == 'cat')
>>> for pet in query:
...     print (pet.name, pet.owner.name)
...
Kitty Bob
Mittens Jr Herb
>>> for pet in Pet.select().join(Person).where(Person.name == 'Bob'):
...     print (pet.name)
...
Traceback (most recent call last):
  File "C:\Python34\lib\site-packages\peewee.py", line 3331, in execute_sql
    cursor.execute(sql, params or ())
sqlite3.OperationalError: no such table: person

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Python34\lib\site-packages\peewee.py", line 2846, in __iter__
    return iter(self.execute())
  File "C:\Python34\lib\site-packages\peewee.py", line 2839, in execute
    self._qr = ResultWrapper(model_class, self._execute(), query_meta)
  File "C:\Python34\lib\site-packages\peewee.py", line 2535, in _execute
    return self.database.execute_sql(sql, params, self.require_commit)
  File "C:\Python34\lib\site-packages\peewee.py", line 3339, in execute_sql
    self.commit()
  File "C:\Python34\lib\site-packages\peewee.py", line 3185, in __exit__
    reraise(new_type, new_type(*exc_args), traceback)
  File "C:\Python34\lib\site-packages\peewee.py", line 123, in reraise
    raise value.with_traceback(tb)
  File "C:\Python34\lib\site-packages\peewee.py", line 3331, in execute_sql
    cursor.execute(sql, params or ())
peewee.OperationalError: no such table: person
>>> for pet in Pet.select().where(Pet.owner == uncle_bob):
...     print (pet.name)
...
Kitty
Fido
>>> for person in Person.select().order_by(Person.birthday.desc()):
...     print (person.name, person.birthday)
...
Bob 1960-01-15
Herb 1950-05-05
Grandma L. 1935-03-01
>>> for person in Person.select():
...     print (person.name, person.pets.count(), 'pets')
...     for pet in person.pets:
...             print ('    ', pet.name, pet.animal_type)
...
Bob 2 pets
     Kitty cat
     Fido dog
Grandma L. 0 pets
Herb 1 pets
     Mittens Jr cat

